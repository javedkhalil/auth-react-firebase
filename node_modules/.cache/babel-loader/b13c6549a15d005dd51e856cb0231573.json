{"ast":null,"code":"var _jsxFileName = \"/home/javed/projects/auth-react-firebase/src/components/Account.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nexport default function Account() {\n  const [form, setForm] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false); // switch form\n\n  const changeForm = type => {\n    if (type === 'login') {\n      setForm('login');\n      setError('');\n      setSuccess('');\n      setEmail('');\n      setPassword('');\n    } else if (type === 'signup') {\n      setForm('signup');\n      setError('');\n      setSuccess('');\n      setEmail('');\n      setPassword('');\n    } else {\n      setForm('login');\n    }\n  }; // onchange email and password\n\n\n  const handleInput = (e, type) => {\n    if (type === 'txtEmail') {\n      setEmail(e.target.value);\n    }\n\n    if (type === 'txtPassword') {\n      setPassword(e.target.value);\n    }\n  }; // handle submit\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // get credentials from state\n\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n\n    if (form === 'login') {\n      // handle login request\n      setError('');\n      setSuccess('');\n\n      if (email && password && email.length > 6 && password.length > 6) {\n        axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA7BXfCDlD4XUpkzbbBcSYYhlkiJI_SiYg', authData).then(response => {\n          // console.log(response);\n          // console.log(response.data);\n          // console.log(response.data.idToken);\n          // console.log(response.data.expiresIn);\n          // console.log(response.data.localId);\n          localStorage.setItem(\"token\", response.data.idToken);\n          localStorage.setItem(\"expiry\", response.data.expiresIn);\n          localStorage.setItem(\"localID\", response.data.localId); // clear fields\n\n          setEmail('');\n          setPassword('');\n          setSuccess('Login success...'); // redirect to home\n\n          setLoggedIn(true); // dispatch login success\n          // save token and time in local storage\n        }).catch(error => {\n          console.log(\"Login Failed\", error); // dispatch auth failed\n\n          setError('Login failed');\n        });\n      } else {\n        setError('Use valid Email address and min 6 characters are required for each field');\n      }\n    }\n\n    if (form === 'signup') {\n      // handle signup request\n      setError('');\n      setSuccess('');\n\n      if (email && password && email.length > 6 && password.length > 6) {\n        axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA7BXfCDlD4XUpkzbbBcSYYhlkiJI_SiYg', authData).then(response => {\n          // console.log(response);\n          // console.log(response.data);\n          setSuccess('Account created successfully... Please login'); // clear fields\n\n          setEmail('');\n          setPassword('');\n          setForm('login'); // dispatch signup success\n        }).catch(error => {\n          console.log(\"Signup Failed\", error); // dispatch signup failed\n\n          setError('Signup failed');\n        });\n      } else {\n        setError('Use valid Email address and min 6 characters are required for each field');\n      }\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"page-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, loggedIn ? React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }) : null, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Login or Create Account\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, error ? React.createElement(\"div\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, error) : null, success ? React.createElement(\"div\", {\n    className: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, success) : null, form === 'login' ? React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Login\") : React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Create Account\"), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(\"input\", {\n    type: \"email\",\n    value: email,\n    onChange: e => handleInput(e, 'txtEmail'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: e => handleInput(e, 'txtPassword'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, form === 'login' ? React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Login\") : React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Create Account\")), form === 'login' ? React.createElement(\"div\", {\n    className: \"link\",\n    onClick: () => changeForm('signup'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Don't have account? Create New Account.\") : React.createElement(\"div\", {\n    className: \"link\",\n    onClick: () => changeForm('login'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Already have account? Login.\"))));\n}","map":{"version":3,"sources":["/home/javed/projects/auth-react-firebase/src/components/Account.js"],"names":["React","useState","useEffect","axios","Redirect","Account","form","setForm","email","setEmail","password","setPassword","error","setError","success","setSuccess","loggedIn","setLoggedIn","changeForm","type","handleInput","e","target","value","handleSubmit","preventDefault","authData","returnSecureToken","length","post","then","response","localStorage","setItem","data","idToken","expiresIn","localId","catch","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\nexport default function Account() {\n  const [ form, setForm ] = useState('login');\n  const [ email, setEmail ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const [ error, setError ] = useState('');\n  const [ success, setSuccess ] = useState('');\n  const [ loggedIn, setLoggedIn ] = useState(false);\n\n  // switch form\n  const changeForm = (type) => {\n    if(type === 'login') {\n      setForm('login');\n      setError('');\n      setSuccess('');\n      setEmail('');\n      setPassword('');\n    } else if (type === 'signup') {\n      setForm('signup');\n      setError('');\n      setSuccess('');\n      setEmail('');\n      setPassword('');\n    } else {\n      setForm('login');\n    }\n  }\n  \n  // onchange email and password\n  const handleInput = (e, type) => {\n    if(type === 'txtEmail') {\n      setEmail(e.target.value);\n    }\n    if(type === 'txtPassword') {\n      setPassword(e.target.value);\n    }\n  }\n\n  // handle submit\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // get credentials from state\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    }\n    if(form === 'login') {\n      // handle login request\n      setError('');\n      setSuccess('');\n\n      if(email && password && email.length > 6 && password.length > 6) {\n        axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA7BXfCDlD4XUpkzbbBcSYYhlkiJI_SiYg', authData)\n        .then(response => {\n          // console.log(response);\n          // console.log(response.data);\n          \n          // console.log(response.data.idToken);\n          // console.log(response.data.expiresIn);\n          // console.log(response.data.localId);\n  \n          localStorage.setItem(\"token\", response.data.idToken);\t\n          localStorage.setItem(\"expiry\", response.data.expiresIn);\n          localStorage.setItem(\"localID\", response.data.localId);\n  \n          // clear fields\n          setEmail('');\n          setPassword('');\n\n          setSuccess('Login success...')\n  \n          // redirect to home\n          setLoggedIn(true);\n\n\n          // dispatch login success\n          // save token and time in local storage\n        })\n        .catch(error => {\n          console.log(\"Login Failed\", error);\n          // dispatch auth failed\n          setError('Login failed');\n        })\n      } else {\n        setError('Use valid Email address and min 6 characters are required for each field')\n      }\n\n    }\n    if(form === 'signup') {\n      // handle signup request\n      setError('');\n      setSuccess('');\n\n      if(email && password && email.length > 6 && password.length > 6) {\n        axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA7BXfCDlD4XUpkzbbBcSYYhlkiJI_SiYg', authData)\n        .then(response => {\n          // console.log(response);\n          // console.log(response.data);\n\n          setSuccess('Account created successfully... Please login')\n  \n          // clear fields\n          setEmail('');\n          setPassword('');\n          setForm('login');\n  \n          // dispatch signup success\n        })\n        .catch(error => {\n          console.log(\"Signup Failed\", error);\n          // dispatch signup failed\n          setError('Signup failed');\n        })\n      } else {\n        setError('Use valid Email address and min 6 characters are required for each field')\n      }\n\n    }\n  }\n  \n  return (\n    <div className=\"page-wrap\">\n      { loggedIn ? <Redirect to=\"/\" /> : null }\n      <h4>Login or Create Account</h4>\n        <form onSubmit={ handleSubmit }>\n          <div className=\"account\">\n            { error ? <div className=\"error\">{ error }</div> : null }\n            { success ? <div className=\"success\">{ success }</div> : null }\n          { form === 'login' ? <h4>Login</h4> : <h4>Create Account</h4> }\n            <div className=\"form-group\">\n              <label>Email Address</label>\n              <input type=\"email\" value={ email } onChange={ (e) => handleInput(e, 'txtEmail') } />\n            </div>\n            <div className=\"form-group\">\n              <label>Password</label>\n              <input type=\"password\" value={ password } onChange={ (e) => handleInput(e, 'txtPassword') } />\n            </div>\n            <div className=\"form-group\">\n              { form === 'login' ? <button className=\"btn\">Login</button> : <button className=\"btn\">Create Account</button> }\n            </div>\n            { form === 'login' ? (\n              <div className=\"link\" onClick={ () => changeForm('signup') }>Don't have account? Create New Account.</div>\n            ) : (\n              <div className=\"link\" onClick={ () => changeForm('login') }>Already have account? Login.</div>\n            ) }\n          </div>\n        </form>\n      </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}